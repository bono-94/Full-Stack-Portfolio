# Generated by Django 3.2.18 on 2023-06-11 17:14

import cloudinary_storage.storage
import cloudinary_storage.validators
import django.core.validators
from django.db import migrations, models
import django.utils.timezone
import projects.models


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0071_profile_user_type'),
    ]

    operations = [
        migrations.RenameField(
            model_name='post',
            old_name='company',
            new_name='organization',
        ),
        migrations.RemoveField(
            model_name='post',
            name='content',
        ),
        migrations.RemoveField(
            model_name='post',
            name='project_image',
        ),
        migrations.AddField(
            model_name='post',
            name='amount_collected',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(500)]),
        ),
        migrations.AddField(
            model_name='post',
            name='articles',
            field=models.TextField(blank=True, max_length=840, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='author_type',
            field=models.CharField(blank=True, choices=[('Human', 'Human'), ('AI', 'AI')], max_length=5, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='business_knowledge',
            field=models.TextField(blank=True, max_length=840, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='certificates',
            field=models.TextField(blank=True, max_length=840, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='change',
            field=models.TextField(blank=True, max_length=2100, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='contact_days',
            field=models.CharField(blank=True, max_length=63, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='contact_hours',
            field=models.CharField(blank=True, max_length=42, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='department',
            field=models.CharField(blank=True, max_length=21, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='document',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='post_document/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AddField(
            model_name='post',
            name='end_date',
            field=models.DateField(blank=True, default=django.utils.timezone.now, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='facebook_link',
            field=models.URLField(blank=True, max_length=210, null=True, verbose_name='Facebook URL'),
        ),
        migrations.AddField(
            model_name='post',
            name='focus_collaboration',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='post',
            name='focus_financials',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='post',
            name='focus_innovation',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='post',
            name='focus_leadership',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='post',
            name='focus_monitoring',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='post',
            name='focus_planning',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='post',
            name='focus_privacy',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='post',
            name='focus_quality',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='post',
            name='focus_quantity',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='post',
            name='future',
            field=models.TextField(blank=True, max_length=2100, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='infinite_end_date',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='post',
            name='instagram_link',
            field=models.URLField(blank=True, max_length=210, null=True, verbose_name='Instagram URL'),
        ),
        migrations.AddField(
            model_name='post',
            name='journey',
            field=models.TextField(blank=True, max_length=2100, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='launch_date',
            field=models.DateField(blank=True, default=django.utils.timezone.now, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='legacy',
            field=models.TextField(blank=True, max_length=2100, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='linkedin_link',
            field=models.URLField(blank=True, max_length=210, null=True, verbose_name='LinkedIn URL'),
        ),
        migrations.AddField(
            model_name='post',
            name='main_content',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='post_audio',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.VideoMediaCloudinaryStorage(), upload_to='post_audio/', validators=[projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_hundred]),
        ),
        migrations.AddField(
            model_name='post',
            name='post_color',
            field=models.CharField(blank=True, default='#ffc107', max_length=7, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='post_image',
            field=models.ImageField(blank=True, null=True, upload_to='post_images/', validators=[projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AddField(
            model_name='post',
            name='post_list_description',
            field=models.CharField(blank=True, max_length=84, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='post_list_image',
            field=models.ImageField(blank=True, null=True, upload_to='post_list_images/', validators=[projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AddField(
            model_name='post',
            name='post_location',
            field=models.CharField(blank=True, max_length=42, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='post_public_email',
            field=models.EmailField(blank=True, max_length=42, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='post_type',
            field=models.CharField(blank=True, choices=[('Organization', 'Organization'), ('Project', 'Project'), ('Product', 'Product'), ('Service', 'Service')], max_length=12, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='post_verification',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='post',
            name='post_video',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.VideoMediaCloudinaryStorage(), upload_to='posts-videos/', validators=[cloudinary_storage.validators.validate_video, projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_hundred]),
        ),
        migrations.AddField(
            model_name='post',
            name='post_video_privacy',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='post',
            name='product',
            field=models.CharField(default=django.utils.timezone.now, max_length=50),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='post',
            name='project',
            field=models.CharField(default=django.utils.timezone.now, max_length=50),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='post',
            name='public_visibility',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='post',
            name='screenshot',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='screenshot/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AddField(
            model_name='post',
            name='service',
            field=models.CharField(default=django.utils.timezone.now, max_length=50),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='post',
            name='sheet',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='sheet/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['xlsx', 'xls', 'xlsm', 'xlsb', 'csv', 'parquet']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_hundred]),
        ),
        migrations.AddField(
            model_name='post',
            name='special_finance',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='post',
            name='special_hr',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='post',
            name='special_marketing',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='post',
            name='special_ops',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='post',
            name='special_research',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='post',
            name='special_supply_chain',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='post',
            name='special_sustainability',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='post',
            name='special_tech',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='post',
            name='specialty_privacy',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='post',
            name='story',
            field=models.TextField(blank=True, max_length=2100, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='twitter_link',
            field=models.URLField(blank=True, max_length=210, null=True, verbose_name='Twitter URL'),
        ),
        migrations.AddField(
            model_name='post',
            name='website_link',
            field=models.URLField(blank=True, max_length=210, null=True, verbose_name='Website URL'),
        ),
        migrations.AddField(
            model_name='post',
            name='youtube_link',
            field=models.URLField(blank=True, max_length=210, null=True, verbose_name='YouTube URL'),
        ),
    ]
