# Generated by Django 3.2.18 on 2023-06-12 19:37

import cloudinary_storage.storage
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.utils.timezone
import projects.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('projects', '0073_rename_company_profile_organization'),
    ]

    operations = [
        migrations.RenameField(
            model_name='post',
            old_name='description',
            new_name='caption',
        ),
        migrations.RenameField(
            model_name='post',
            old_name='post_location',
            new_name='organization_mission',
        ),
        migrations.RenameField(
            model_name='post',
            old_name='post_audio',
            new_name='post_background_audio',
        ),
        migrations.RenameField(
            model_name='post',
            old_name='post_color',
            new_name='post_color_secondary',
        ),
        migrations.RemoveField(
            model_name='post',
            name='certificates',
        ),
        migrations.RemoveField(
            model_name='post',
            name='department',
        ),
        migrations.RemoveField(
            model_name='post',
            name='document',
        ),
        migrations.RemoveField(
            model_name='post',
            name='post_image',
        ),
        migrations.RemoveField(
            model_name='post',
            name='screenshot',
        ),
        migrations.RemoveField(
            model_name='post',
            name='sheet',
        ),
        migrations.AddField(
            model_name='post',
            name='agenda',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='agendas/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AddField(
            model_name='post',
            name='amount_requested',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(999999999999)]),
        ),
        migrations.AddField(
            model_name='post',
            name='business_model_canvas',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='business_model_canvases/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AddField(
            model_name='post',
            name='business_plan',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='business_plans/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AddField(
            model_name='post',
            name='certification',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='certifications/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AddField(
            model_name='post',
            name='challenges',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='collaboration',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='collaborators',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='community',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='community_access',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='post',
            name='contracts',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='contracts/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AddField(
            model_name='post',
            name='data_architecture_map',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='data_architecture_maps/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AddField(
            model_name='post',
            name='differentiation',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='end_product_or_service_quality',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='end_product_or_service_quantity',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(999999999999)]),
        ),
        migrations.AddField(
            model_name='post',
            name='favourites',
            field=models.ManyToManyField(blank=True, related_name='projects_favourites', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='post',
            name='fee_model',
            field=models.CharField(blank=True, choices=[('One-time Fee', 'One-time Fee'), ('Percentage', 'Percentage')], max_length=12, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='financial_reports',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='financial_reports/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['xlsx', 'xls', 'xlsm', 'xlsb', 'csv', 'parquet']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_hundred]),
        ),
        migrations.AddField(
            model_name='post',
            name='flowchart',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='flowcharts/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AddField(
            model_name='post',
            name='franchizing',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='hr_handbook',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='hr_handbooks/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AddField(
            model_name='post',
            name='impact',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='implementation_plan',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='implementation_plans/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AddField(
            model_name='post',
            name='intellectual_property',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='internal_report',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='internal_reports/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AddField(
            model_name='post',
            name='introduction',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='legal_protection',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='licencing',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='lifetime_discount_percentages',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='post',
            name='marketing_strategy_map',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='marketing_strategy_maps/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AddField(
            model_name='post',
            name='merchandize',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='offer_model',
            field=models.CharField(blank=True, choices=[('Stocks', 'Stocks'), ('Ownership Percentage', 'Ownership Percentage'), ('Return Amount', 'Return Amount'), ('End Products/Services Quality', 'End Products/Services Quality'), ('End Products/Services Quantity', 'End Products/Services Quantity'), ('Lifetime Discount', 'Lifetime Discount'), ('Team Position', 'Team Position'), ('Partnership', 'Partnership'), ('Collaboration', 'Collaboration'), ('Sponsorship', 'Sponsorship'), ('Community Access', 'Community Access'), ('Pioneering', 'Pioneering'), ('Merchandize', 'Merchandize'), ('Special Acknowledgement', 'Special Acknowledgement'), ('Open Offers', 'Open Offers')], max_length=30, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='offer_terms',
            field=models.TextField(blank=True, max_length=8400, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='open_offers',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='post',
            name='opportunities',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='organization_culture',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='organization_info',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='organization_vision',
            field=models.CharField(blank=True, max_length=42, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='organizational_structure',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='organizational_structures/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AddField(
            model_name='post',
            name='ownership_percentage',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='post',
            name='partners',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='partnership',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='payout_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='pestle_report',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='pestle_reports/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AddField(
            model_name='post',
            name='pioneering',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='post',
            name='post_about_privacy',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='post',
            name='post_author_image',
            field=models.ImageField(blank=True, null=True, upload_to='post_author_images/', validators=[projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AddField(
            model_name='post',
            name='post_banner_image',
            field=models.ImageField(blank=True, null=True, upload_to='post_banner_images/', validators=[projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AddField(
            model_name='post',
            name='post_body_privacy',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='post',
            name='post_bridge_privacy',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='post',
            name='post_color_primary',
            field=models.CharField(blank=True, default='#292b2c', max_length=7, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='post_conclusion_privacy',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='post',
            name='post_contact_privacy',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='post',
            name='post_fee_model_privacy',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='post',
            name='post_location_city',
            field=models.CharField(blank=True, max_length=42, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='post_location_continent',
            field=models.CharField(blank=True, max_length=42, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='post_location_country',
            field=models.CharField(blank=True, max_length=42, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='post_location_planet',
            field=models.CharField(blank=True, max_length=42, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='post_organization_image',
            field=models.ImageField(blank=True, null=True, upload_to='post_organizations_images/', validators=[projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AddField(
            model_name='post',
            name='post_results_privacy',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='post',
            name='pps_goals',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='pps_milestones',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='pps_objectives',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='products_provided',
            field=models.CharField(blank=True, max_length=42, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='project_owner',
            field=models.CharField(default=django.utils.timezone.now, max_length=50),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='post',
            name='promotional_materials',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='promotional_materials/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AddField(
            model_name='post',
            name='rating',
            field=models.ManyToManyField(blank=True, related_name='projects_rating', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='post',
            name='research_and_development_agenda',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='research_and_development_agenda/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AddField(
            model_name='post',
            name='resources_requiered',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='return_amount',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(999999999999)]),
        ),
        migrations.AddField(
            model_name='post',
            name='risks',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='schedule',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='schedules/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['xlsx', 'xls', 'xlsm', 'xlsb', 'csv', 'parquet']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_hundred]),
        ),
        migrations.AddField(
            model_name='post',
            name='sdg_goals',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='services_provided',
            field=models.CharField(blank=True, max_length=42, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='shareholders',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='special_acknowledgement',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='special_finance_two',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='special_hr_two',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='special_marketing_two',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='special_ops_two',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='special_research_two',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='special_supply_chain_two',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='special_sustainability_two',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='special_tech_two',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='specialty_privacy_two',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='post',
            name='sponsors',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='sponsorship',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='stakeholders',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='standard_operational_procedures',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='standard_operational_procedures/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AddField(
            model_name='post',
            name='stocks_offering',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(999999999999)]),
        ),
        migrations.AddField(
            model_name='post',
            name='stocks_supply',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(999999999999)]),
        ),
        migrations.AddField(
            model_name='post',
            name='strengths',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='supply_chain_map',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='supply_chain_maps/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AddField(
            model_name='post',
            name='sustainability_report',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='sustainability_reports/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AddField(
            model_name='post',
            name='target_group',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='target_markets',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='tasklist',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='tasklists/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AddField(
            model_name='post',
            name='team',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='team_guaranteed_position',
            field=models.CharField(blank=True, max_length=42, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='terms_conditions',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='terms_conditions/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AddField(
            model_name='post',
            name='threats',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='timeline',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='timelines/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AddField(
            model_name='post',
            name='values_provided',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='views',
            field=models.ManyToManyField(blank=True, related_name='projects_views', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='post',
            name='weaknesses',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AlterField(
            model_name='post',
            name='articles',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='articles/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AlterField(
            model_name='post',
            name='business_knowledge',
            field=models.TextField(blank=True, max_length=8400, null=True),
        ),
        migrations.AlterField(
            model_name='post',
            name='change',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AlterField(
            model_name='post',
            name='main_content',
            field=models.TextField(blank=True, max_length=8400, null=True),
        ),
        migrations.AlterField(
            model_name='post',
            name='special_finance',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AlterField(
            model_name='post',
            name='special_hr',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AlterField(
            model_name='post',
            name='special_marketing',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AlterField(
            model_name='post',
            name='special_ops',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AlterField(
            model_name='post',
            name='special_research',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AlterField(
            model_name='post',
            name='special_supply_chain',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AlterField(
            model_name='post',
            name='special_sustainability',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
        migrations.AlterField(
            model_name='post',
            name='special_tech',
            field=models.TextField(blank=True, max_length=210, null=True),
        ),
    ]
