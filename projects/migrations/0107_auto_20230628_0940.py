# Generated by Django 3.2.18 on 2023-06-28 09:40

import cloudinary_storage.storage
import django.core.validators
from django.db import migrations, models
import projects.models


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0106_alter_post_launch_date'),
    ]

    operations = [
        migrations.AlterField(
            model_name='post',
            name='agenda',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='agendas/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip', 'jpg', 'jpeg', 'png', 'xlsx', 'xls', 'xlsm', 'xlsb', 'csv', 'parquet']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AlterField(
            model_name='post',
            name='articles',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='articles/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip', 'jpg', 'jpeg', 'png', 'xlsx', 'xls', 'xlsm', 'xlsb', 'csv', 'parquet']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AlterField(
            model_name='post',
            name='business_model_canvas',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='business_model_canvases/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip', 'jpg', 'jpeg', 'png', 'xlsx', 'xls', 'xlsm', 'xlsb', 'csv', 'parquet']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AlterField(
            model_name='post',
            name='business_plan',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='business_plans/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip', 'jpg', 'jpeg', 'png', 'xlsx', 'xls', 'xlsm', 'xlsb', 'csv', 'parquet']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AlterField(
            model_name='post',
            name='capabilities',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='capabilities/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip', 'jpg', 'jpeg', 'png', 'xlsx', 'xls', 'xlsm', 'xlsb', 'csv', 'parquet']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AlterField(
            model_name='post',
            name='certification',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='certifications/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip', 'jpg', 'jpeg', 'png', 'xlsx', 'xls', 'xlsm', 'xlsb', 'csv', 'parquet']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AlterField(
            model_name='post',
            name='contracts',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='contracts/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip', 'jpg', 'jpeg', 'png', 'xlsx', 'xls', 'xlsm', 'xlsb', 'csv', 'parquet']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AlterField(
            model_name='post',
            name='data_architecture_map',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='data_architecture_maps/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip', 'jpg', 'jpeg', 'png', 'xlsx', 'xls', 'xlsm', 'xlsb', 'csv', 'parquet']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AlterField(
            model_name='post',
            name='financial_reports',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='financial_reports/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip', 'jpg', 'jpeg', 'png', 'xlsx', 'xls', 'xlsm', 'xlsb', 'csv', 'parquet']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_hundred]),
        ),
        migrations.AlterField(
            model_name='post',
            name='flowchart',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='flowcharts/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip', 'jpg', 'jpeg', 'png', 'xlsx', 'xls', 'xlsm', 'xlsb', 'csv', 'parquet']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AlterField(
            model_name='post',
            name='hr_handbook',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='hr_handbooks/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip', 'jpg', 'jpeg', 'png', 'xlsx', 'xls', 'xlsm', 'xlsb', 'csv', 'parquet']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AlterField(
            model_name='post',
            name='implementation_plan',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='implementation_plans/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip', 'jpg', 'jpeg', 'png', 'xlsx', 'xls', 'xlsm', 'xlsb', 'csv', 'parquet']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AlterField(
            model_name='post',
            name='internal_report',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='internal_reports/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip', 'jpg', 'jpeg', 'png', 'xlsx', 'xls', 'xlsm', 'xlsb', 'csv', 'parquet']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AlterField(
            model_name='post',
            name='marketing_strategy_map',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='marketing_strategy_maps/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip', 'jpg', 'jpeg', 'png', 'xlsx', 'xls', 'xlsm', 'xlsb', 'csv', 'parquet']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AlterField(
            model_name='post',
            name='organizational_structure',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='organizational_structures/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip', 'jpg', 'jpeg', 'png', 'xlsx', 'xls', 'xlsm', 'xlsb', 'csv', 'parquet']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AlterField(
            model_name='post',
            name='pestle_report',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='pestle_reports/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip', 'jpg', 'jpeg', 'png', 'xlsx', 'xls', 'xlsm', 'xlsb', 'csv', 'parquet']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AlterField(
            model_name='post',
            name='promotional_materials',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='promotional_materials/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip', 'jpg', 'jpeg', 'png', 'xlsx', 'xls', 'xlsm', 'xlsb', 'csv', 'parquet']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AlterField(
            model_name='post',
            name='research_and_development_agenda',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='research_and_development_agenda/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip', 'jpg', 'jpeg', 'png', 'xlsx', 'xls', 'xlsm', 'xlsb', 'csv', 'parquet']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AlterField(
            model_name='post',
            name='schedule',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='schedules/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip', 'jpg', 'jpeg', 'png', 'xlsx', 'xls', 'xlsm', 'xlsb', 'csv', 'parquet']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_hundred]),
        ),
        migrations.AlterField(
            model_name='post',
            name='standard_operational_procedures',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='standard_operational_procedures/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip', 'jpg', 'jpeg', 'png', 'xlsx', 'xls', 'xlsm', 'xlsb', 'csv', 'parquet']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AlterField(
            model_name='post',
            name='supply_chain_map',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='supply_chain_maps/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip', 'jpg', 'jpeg', 'png', 'xlsx', 'xls', 'xlsm', 'xlsb', 'csv', 'parquet']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AlterField(
            model_name='post',
            name='sustainability_report',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='sustainability_reports/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip', 'jpg', 'jpeg', 'png', 'xlsx', 'xls', 'xlsm', 'xlsb', 'csv', 'parquet']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AlterField(
            model_name='post',
            name='tasklist',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='tasklists/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip', 'jpg', 'jpeg', 'png', 'xlsx', 'xls', 'xlsm', 'xlsb', 'csv', 'parquet']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
        migrations.AlterField(
            model_name='post',
            name='terms_conditions',
            field=models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='terms_conditions/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'zip', 'jpg', 'jpeg', 'png', 'xlsx', 'xls', 'xlsm', 'xlsb', 'csv', 'parquet']), projects.models.Post.validate_file_name_length, projects.models.Post.max_file_size_ten]),
        ),
    ]
